snippet import "import"
import (
	"${0}"
)
endsnippet

snippet var "var"
var (
	"${0}"
)
endsnippet

snippet const "const"
const (
	"${0}"
)
endsnippet

snippet if "if"
if ${1} {
	${0}
} 
endsnippet

snippet switch "switch"
switch ${1} {
	case ${2:pattern}:
		${0}
	default:
} 
endsnippet

snippet for "for loop"
for ${1} {
	${0}
} 
endsnippet

snippet forr "for range loop"
for ${1:k}, ${2:v} := range ${3:items} {
	${0}
}
endsnippet

snippet func "function"
// ${1:func} ${2:desc}
func $1(${3:arguments}) ${4} {
	${0}
}
endsnippet

snippet meth "method"
// ${1:func} ${2:desc}
func (${3:receiver}) $1(${4:arguments}) ${5} {
	${0}
}
endsnippet

snippet err "if error"
if ${1:err} != nil {
	${0}
} 
endsnippet

snippet impl "check interface implementation"
// Guarantee ${1:type} satisfies ${2:interface}.
var _ $2 = (*$1)(nil)
endsnippet
